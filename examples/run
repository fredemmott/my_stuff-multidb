#!/usr/bin/env ruby
# Copyright 2011-present Fred Emmott. See COPYING file.

_FILE = File.readlink(__FILE__) rescue __FILE__
_DIR = File.expand_path(File.dirname(_FILE))
$LOAD_PATH.push(File.expand_path(_DIR +  '/../lib'))

DB_FILE = File.join(_DIR, 'db.sqlite')

require 'sqlite3'
require 'active_record'
require 'my_stuff/multidb'

File.delete DB_FILE if File.exists? DB_FILE

SQLite3::Database.new(DB_FILE).execute <<-SQL
  create table widgets (
    id integer primary key,
    name varchar(30)
  );
SQL

module SpecSource
  def spec_for_new
    {
      :adapter  => 'sqlite3',
      :database => DB_FILE
    }
  end

  def spec_for_master shard_id
    spec_for_new
  end

  # No replication in sqlite
  alias :spec_for_slave :spec_for_master
end


module MyDB
  class Widget < ActiveRecord::Base
  end

  extend ::SpecSource
  include MyStuff::MultiDB::Sharded # OK, only one shard. Meh, I lied.
end


# Add lots of records
(1..20).each do |i|
  MyDB.with_master_for_new do |db|
    db::Widget.create(:name => "Widget #%d" % i)
  end
end

# Modify them
(1..20).each do |i|
  MyDB.with_master_for(i) do |db|
    widget = db::Widget.find(i)
    widget.name += " - revisited"
    widget.save
  end
end

# Read them back
(1..20).each do |i|
  MyDB.with_slave_for(i) do |db|
    expected = "Widget #%d - revisited" % i
    expected.freeze
    actual   = db::Widget.find(i).name

    if actual == expected
      puts "%0.2d: OK" % i
    else
      puts "%0.2d: FAILED - expected: %s; got: %s" % [i, expected, actual]
    end
  end
end
